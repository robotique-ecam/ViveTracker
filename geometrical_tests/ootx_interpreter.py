slow_ootx_bits

number_of_bits = 443

print(slow_ootx_bits[:number_of_bits])
print()
print(slow_ootx_bits[number_of_bits:2*number_of_bits])
print()
print(slow_ootx_bits[2*number_of_bits:3*number_of_bits])
print()
print(slow_ootx_bits[3*number_of_bits:4*number_of_bits])
print()
print(slow_ootx_bits[4*number_of_bits:5*number_of_bits])
print()

ootx1 = slow_ootx_bits[number_of_bits:2*number_of_bits]
ootx2 = slow_ootx_bits[2*number_of_bits:3*number_of_bits]
ootx3 = slow_ootx_bits[3*number_of_bits:4*number_of_bits]

full_ootx = ""

for i in range(len(ootx1)):
    if ootx1[i] != " ":
        full_ootx += ootx1[i]
    elif ootx2[i] != " ":
        full_ootx += ootx2[i]
    elif ootx3[i] != " ":
        full_ootx += ootx3[i]
    else:
        full_ootx += " "

print(full_ootx)

"""
full_ootx = "
000000000000000001
00101011000000001

10001000000010001 #fw_version
01110110110010111
01100100110011011 #id
00000000000000001 #focal_phase[0]
10010110000100011 #focal_phase[1]
10111000101010101 #focal_tilt[0]
11000010001010011 #focal_tilt[1]
00000001000011111 #sys_unlock_count / ootx_model
00010100101001101 #focal_curve[0]
10000010001101111 #focal_curve[1]
11111110011111111 #accel_dir[0] / accel_dir[1]
00000000110110001 #accel_dir[2] / focal_gibbous_phase[0]
00111100000101011 #focal_gibbous_phase[0] / focal_gibbous_phase[1]
00111110100010111 #focal_gibbous_phase[1] / focal_gibbous_magnitude[0]
10011011110010101 #focal_gibbous_magnetude[0] / focal_gibbous_magnetude[1]
10011101100000001 #focal_gibbous_magnetude[1] / mode_current
00000000111001001 #sys_faults / focal_ogee_phase[0]
00110110000010101 #focal_ogee_phase[0] / focal_ogee_phase[1]
00111110001000101 #focal_ogee_phase[1] / focal_ogee_magnitude[0]
00101111011010101 #focal_ogee_magnitude[0] / focal_ogee_magnitude[1]
00110000110101001 #focal_ogee_magnitude[1] / nonce
10000101000000001 #nonce / null

11100000111010001
0000010111 100101"
"""
